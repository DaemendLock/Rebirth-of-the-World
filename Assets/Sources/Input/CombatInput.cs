//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Sources/Input/CombatInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Input
{
    public partial class @CombatInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @CombatInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""CombatInput"",
    ""maps"": [
        {
            ""name"": ""CombatRTS"",
            ""id"": ""cfdb34f8-9bca-4074-b5de-279d4bb635a6"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Button"",
                    ""id"": ""39e1f6e7-b117-4a0f-a506-a56c891f67bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7f99ffb6-586f-4ea1-a458-2fc4afd62efa"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Combat3rdPerson"",
            ""id"": ""cd24e949-ca96-4b50-8ff7-4126fc38e5bf"",
            ""actions"": [
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""Value"",
                    ""id"": ""2ff6632e-072d-4d36-8af1-75a9c879bd02"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveCharacter"",
                    ""type"": ""Value"",
                    ""id"": ""d5dc7475-e88a-46d4-8cab-64992d060c1d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LockCursor"",
                    ""type"": ""Button"",
                    ""id"": ""9916ccaf-255e-450b-bfbd-84d5f9178696"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DistantCamera"",
                    ""type"": ""Value"",
                    ""id"": ""1a883c5e-80ac-4ac2-a8fe-6c16f36ce7a3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8360e934-70fb-41b7-9392-22cdcdd6672c"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""17525530-5400-4150-9484-7631b8578a4e"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""f3d21975-c1ce-437e-8b44-8e3e4c66ae7f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""837f885e-19eb-43e8-851c-554a6714ebdc"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""2ef989f8-82ca-4eaa-b794-05ff84cd9d23"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCharacter"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""798dd686-8a37-4a4a-81ba-18efe180c77a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bfdc515b-0112-44d1-a5a2-1ac971dddc7e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""afb18722-8f02-4caf-8f64-7f71b0d34882"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e8c8bb84-91b0-405b-a167-aec7b73e6af0"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""dbf56aec-18f2-4e32-a61a-235c1623033d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveCharacter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""364d0482-f9ba-4cf1-ac28-5191d6c79adf"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de1e6ddd-f8f2-4663-8595-e51b55d8a583"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DistantCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CombatCasting"",
            ""id"": ""7e7f7731-fbc1-43bf-a530-35be70bfac14"",
            ""actions"": [
                {
                    ""name"": ""CastAbility1"",
                    ""type"": ""Button"",
                    ""id"": ""f47f339e-52c8-4585-990b-a0a2a4b0767a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastAbility2"",
                    ""type"": ""Button"",
                    ""id"": ""0c6db217-cacb-4411-8ccd-3057395da043"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastAbility3"",
                    ""type"": ""Button"",
                    ""id"": ""eb6ef794-53b3-460b-8f54-42d561553769"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastAbility4"",
                    ""type"": ""Button"",
                    ""id"": ""4d2265d9-a6d2-4af3-a837-d802b6d5b4c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastAbility5"",
                    ""type"": ""Button"",
                    ""id"": ""bc43199a-0e78-4bcb-926e-cb3aeb502710"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastAbility6"",
                    ""type"": ""Button"",
                    ""id"": ""bd011827-bb9c-4559-96b8-396fdbae8363"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b7e0768e-0112-44ba-8296-63b1087d74b7"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CastAbility1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39497656-0d96-4c2e-a9ac-69fe13d450b4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CastAbility1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9350a94-cd93-406e-8359-3b80e0eea81f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CastAbility2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""662ccef5-aff5-4d1c-9aa4-d60a0b0abc6f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CastAbility2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83d36888-d62a-446e-810a-a046a2a19d40"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CastAbility3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""430d43ea-05dd-4254-abaa-afbde2f4ce01"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CastAbility3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c30f2c44-5f65-463b-bf82-1639c96f668e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CastAbility4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c082968-e92c-4e28-93c9-39347a38af93"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CastAbility4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f92c2f4-8d1e-4018-8b41-0df977762084"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CastAbility5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b0eaec4-5cbf-42f8-b999-a3ee56937965"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CastAbility5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13a8a8d4-e5f5-4bc7-90bc-f02f6fbad89f"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CastAbility6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4aea0f5d-7696-4d2f-821c-76223e0516b8"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CastAbility6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CombatTargeting"",
            ""id"": ""93d6df67-d546-466a-8958-c5078cd9a3ff"",
            ""actions"": [
                {
                    ""name"": ""SellectTarget"",
                    ""type"": ""Button"",
                    ""id"": ""d52be580-9a38-4427-8200-534f4413e74e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControlNext"",
                    ""type"": ""Button"",
                    ""id"": ""7f363d96-9cd0-42ff-a6e6-31e2171af71c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetNext"",
                    ""type"": ""Button"",
                    ""id"": ""cf62f09c-8d5d-4618-9264-a9f633dcfac7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""783f9511-3d92-4101-89b4-749bdb6a728a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SellectTarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7c0f2b2-c676-4eac-a6bb-bba4b76733f9"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ControlNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""287b2eb5-6e89-4285-9660-4ed1f8d083cc"",
                    ""path"": ""<Mouse>/backButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""TargetNext"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
            // CombatRTS
            m_CombatRTS = asset.FindActionMap("CombatRTS", throwIfNotFound: true);
            m_CombatRTS_Move = m_CombatRTS.FindAction("Move", throwIfNotFound: true);
            // Combat3rdPerson
            m_Combat3rdPerson = asset.FindActionMap("Combat3rdPerson", throwIfNotFound: true);
            m_Combat3rdPerson_MoveCamera = m_Combat3rdPerson.FindAction("MoveCamera", throwIfNotFound: true);
            m_Combat3rdPerson_MoveCharacter = m_Combat3rdPerson.FindAction("MoveCharacter", throwIfNotFound: true);
            m_Combat3rdPerson_LockCursor = m_Combat3rdPerson.FindAction("LockCursor", throwIfNotFound: true);
            m_Combat3rdPerson_DistantCamera = m_Combat3rdPerson.FindAction("DistantCamera", throwIfNotFound: true);
            // CombatCasting
            m_CombatCasting = asset.FindActionMap("CombatCasting", throwIfNotFound: true);
            m_CombatCasting_CastAbility1 = m_CombatCasting.FindAction("CastAbility1", throwIfNotFound: true);
            m_CombatCasting_CastAbility2 = m_CombatCasting.FindAction("CastAbility2", throwIfNotFound: true);
            m_CombatCasting_CastAbility3 = m_CombatCasting.FindAction("CastAbility3", throwIfNotFound: true);
            m_CombatCasting_CastAbility4 = m_CombatCasting.FindAction("CastAbility4", throwIfNotFound: true);
            m_CombatCasting_CastAbility5 = m_CombatCasting.FindAction("CastAbility5", throwIfNotFound: true);
            m_CombatCasting_CastAbility6 = m_CombatCasting.FindAction("CastAbility6", throwIfNotFound: true);
            // CombatTargeting
            m_CombatTargeting = asset.FindActionMap("CombatTargeting", throwIfNotFound: true);
            m_CombatTargeting_SellectTarget = m_CombatTargeting.FindAction("SellectTarget", throwIfNotFound: true);
            m_CombatTargeting_ControlNext = m_CombatTargeting.FindAction("ControlNext", throwIfNotFound: true);
            m_CombatTargeting_TargetNext = m_CombatTargeting.FindAction("TargetNext", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // CombatRTS
        private readonly InputActionMap m_CombatRTS;
        private ICombatRTSActions m_CombatRTSActionsCallbackInterface;
        private readonly InputAction m_CombatRTS_Move;
        public struct CombatRTSActions
        {
            private @CombatInput m_Wrapper;
            public CombatRTSActions(@CombatInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_CombatRTS_Move;
            public InputActionMap Get() { return m_Wrapper.m_CombatRTS; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CombatRTSActions set) { return set.Get(); }
            public void SetCallbacks(ICombatRTSActions instance)
            {
                if (m_Wrapper.m_CombatRTSActionsCallbackInterface != null)
                {
                    @Move.started -= m_Wrapper.m_CombatRTSActionsCallbackInterface.OnMove;
                    @Move.performed -= m_Wrapper.m_CombatRTSActionsCallbackInterface.OnMove;
                    @Move.canceled -= m_Wrapper.m_CombatRTSActionsCallbackInterface.OnMove;
                }
                m_Wrapper.m_CombatRTSActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Move.started += instance.OnMove;
                    @Move.performed += instance.OnMove;
                    @Move.canceled += instance.OnMove;
                }
            }
        }
        public CombatRTSActions @CombatRTS => new CombatRTSActions(this);

        // Combat3rdPerson
        private readonly InputActionMap m_Combat3rdPerson;
        private ICombat3rdPersonActions m_Combat3rdPersonActionsCallbackInterface;
        private readonly InputAction m_Combat3rdPerson_MoveCamera;
        private readonly InputAction m_Combat3rdPerson_MoveCharacter;
        private readonly InputAction m_Combat3rdPerson_LockCursor;
        private readonly InputAction m_Combat3rdPerson_DistantCamera;
        public struct Combat3rdPersonActions
        {
            private @CombatInput m_Wrapper;
            public Combat3rdPersonActions(@CombatInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @MoveCamera => m_Wrapper.m_Combat3rdPerson_MoveCamera;
            public InputAction @MoveCharacter => m_Wrapper.m_Combat3rdPerson_MoveCharacter;
            public InputAction @LockCursor => m_Wrapper.m_Combat3rdPerson_LockCursor;
            public InputAction @DistantCamera => m_Wrapper.m_Combat3rdPerson_DistantCamera;
            public InputActionMap Get() { return m_Wrapper.m_Combat3rdPerson; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Combat3rdPersonActions set) { return set.Get(); }
            public void SetCallbacks(ICombat3rdPersonActions instance)
            {
                if (m_Wrapper.m_Combat3rdPersonActionsCallbackInterface != null)
                {
                    @MoveCamera.started -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnMoveCamera;
                    @MoveCamera.performed -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnMoveCamera;
                    @MoveCamera.canceled -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnMoveCamera;
                    @MoveCharacter.started -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnMoveCharacter;
                    @MoveCharacter.performed -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnMoveCharacter;
                    @MoveCharacter.canceled -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnMoveCharacter;
                    @LockCursor.started -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnLockCursor;
                    @LockCursor.performed -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnLockCursor;
                    @LockCursor.canceled -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnLockCursor;
                    @DistantCamera.started -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnDistantCamera;
                    @DistantCamera.performed -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnDistantCamera;
                    @DistantCamera.canceled -= m_Wrapper.m_Combat3rdPersonActionsCallbackInterface.OnDistantCamera;
                }
                m_Wrapper.m_Combat3rdPersonActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @MoveCamera.started += instance.OnMoveCamera;
                    @MoveCamera.performed += instance.OnMoveCamera;
                    @MoveCamera.canceled += instance.OnMoveCamera;
                    @MoveCharacter.started += instance.OnMoveCharacter;
                    @MoveCharacter.performed += instance.OnMoveCharacter;
                    @MoveCharacter.canceled += instance.OnMoveCharacter;
                    @LockCursor.started += instance.OnLockCursor;
                    @LockCursor.performed += instance.OnLockCursor;
                    @LockCursor.canceled += instance.OnLockCursor;
                    @DistantCamera.started += instance.OnDistantCamera;
                    @DistantCamera.performed += instance.OnDistantCamera;
                    @DistantCamera.canceled += instance.OnDistantCamera;
                }
            }
        }
        public Combat3rdPersonActions @Combat3rdPerson => new Combat3rdPersonActions(this);

        // CombatCasting
        private readonly InputActionMap m_CombatCasting;
        private ICombatCastingActions m_CombatCastingActionsCallbackInterface;
        private readonly InputAction m_CombatCasting_CastAbility1;
        private readonly InputAction m_CombatCasting_CastAbility2;
        private readonly InputAction m_CombatCasting_CastAbility3;
        private readonly InputAction m_CombatCasting_CastAbility4;
        private readonly InputAction m_CombatCasting_CastAbility5;
        private readonly InputAction m_CombatCasting_CastAbility6;
        public struct CombatCastingActions
        {
            private @CombatInput m_Wrapper;
            public CombatCastingActions(@CombatInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @CastAbility1 => m_Wrapper.m_CombatCasting_CastAbility1;
            public InputAction @CastAbility2 => m_Wrapper.m_CombatCasting_CastAbility2;
            public InputAction @CastAbility3 => m_Wrapper.m_CombatCasting_CastAbility3;
            public InputAction @CastAbility4 => m_Wrapper.m_CombatCasting_CastAbility4;
            public InputAction @CastAbility5 => m_Wrapper.m_CombatCasting_CastAbility5;
            public InputAction @CastAbility6 => m_Wrapper.m_CombatCasting_CastAbility6;
            public InputActionMap Get() { return m_Wrapper.m_CombatCasting; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CombatCastingActions set) { return set.Get(); }
            public void SetCallbacks(ICombatCastingActions instance)
            {
                if (m_Wrapper.m_CombatCastingActionsCallbackInterface != null)
                {
                    @CastAbility1.started -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility1;
                    @CastAbility1.performed -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility1;
                    @CastAbility1.canceled -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility1;
                    @CastAbility2.started -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility2;
                    @CastAbility2.performed -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility2;
                    @CastAbility2.canceled -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility2;
                    @CastAbility3.started -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility3;
                    @CastAbility3.performed -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility3;
                    @CastAbility3.canceled -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility3;
                    @CastAbility4.started -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility4;
                    @CastAbility4.performed -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility4;
                    @CastAbility4.canceled -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility4;
                    @CastAbility5.started -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility5;
                    @CastAbility5.performed -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility5;
                    @CastAbility5.canceled -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility5;
                    @CastAbility6.started -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility6;
                    @CastAbility6.performed -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility6;
                    @CastAbility6.canceled -= m_Wrapper.m_CombatCastingActionsCallbackInterface.OnCastAbility6;
                }
                m_Wrapper.m_CombatCastingActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @CastAbility1.started += instance.OnCastAbility1;
                    @CastAbility1.performed += instance.OnCastAbility1;
                    @CastAbility1.canceled += instance.OnCastAbility1;
                    @CastAbility2.started += instance.OnCastAbility2;
                    @CastAbility2.performed += instance.OnCastAbility2;
                    @CastAbility2.canceled += instance.OnCastAbility2;
                    @CastAbility3.started += instance.OnCastAbility3;
                    @CastAbility3.performed += instance.OnCastAbility3;
                    @CastAbility3.canceled += instance.OnCastAbility3;
                    @CastAbility4.started += instance.OnCastAbility4;
                    @CastAbility4.performed += instance.OnCastAbility4;
                    @CastAbility4.canceled += instance.OnCastAbility4;
                    @CastAbility5.started += instance.OnCastAbility5;
                    @CastAbility5.performed += instance.OnCastAbility5;
                    @CastAbility5.canceled += instance.OnCastAbility5;
                    @CastAbility6.started += instance.OnCastAbility6;
                    @CastAbility6.performed += instance.OnCastAbility6;
                    @CastAbility6.canceled += instance.OnCastAbility6;
                }
            }
        }
        public CombatCastingActions @CombatCasting => new CombatCastingActions(this);

        // CombatTargeting
        private readonly InputActionMap m_CombatTargeting;
        private ICombatTargetingActions m_CombatTargetingActionsCallbackInterface;
        private readonly InputAction m_CombatTargeting_SellectTarget;
        private readonly InputAction m_CombatTargeting_ControlNext;
        private readonly InputAction m_CombatTargeting_TargetNext;
        public struct CombatTargetingActions
        {
            private @CombatInput m_Wrapper;
            public CombatTargetingActions(@CombatInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @SellectTarget => m_Wrapper.m_CombatTargeting_SellectTarget;
            public InputAction @ControlNext => m_Wrapper.m_CombatTargeting_ControlNext;
            public InputAction @TargetNext => m_Wrapper.m_CombatTargeting_TargetNext;
            public InputActionMap Get() { return m_Wrapper.m_CombatTargeting; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CombatTargetingActions set) { return set.Get(); }
            public void SetCallbacks(ICombatTargetingActions instance)
            {
                if (m_Wrapper.m_CombatTargetingActionsCallbackInterface != null)
                {
                    @SellectTarget.started -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnSellectTarget;
                    @SellectTarget.performed -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnSellectTarget;
                    @SellectTarget.canceled -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnSellectTarget;
                    @ControlNext.started -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnControlNext;
                    @ControlNext.performed -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnControlNext;
                    @ControlNext.canceled -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnControlNext;
                    @TargetNext.started -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnTargetNext;
                    @TargetNext.performed -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnTargetNext;
                    @TargetNext.canceled -= m_Wrapper.m_CombatTargetingActionsCallbackInterface.OnTargetNext;
                }
                m_Wrapper.m_CombatTargetingActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @SellectTarget.started += instance.OnSellectTarget;
                    @SellectTarget.performed += instance.OnSellectTarget;
                    @SellectTarget.canceled += instance.OnSellectTarget;
                    @ControlNext.started += instance.OnControlNext;
                    @ControlNext.performed += instance.OnControlNext;
                    @ControlNext.canceled += instance.OnControlNext;
                    @TargetNext.started += instance.OnTargetNext;
                    @TargetNext.performed += instance.OnTargetNext;
                    @TargetNext.canceled += instance.OnTargetNext;
                }
            }
        }
        public CombatTargetingActions @CombatTargeting => new CombatTargetingActions(this);
        private int m_KeyboardSchemeIndex = -1;
        public InputControlScheme KeyboardScheme
        {
            get
            {
                if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
                return asset.controlSchemes[m_KeyboardSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        public interface ICombatRTSActions
        {
            void OnMove(InputAction.CallbackContext context);
        }
        public interface ICombat3rdPersonActions
        {
            void OnMoveCamera(InputAction.CallbackContext context);
            void OnMoveCharacter(InputAction.CallbackContext context);
            void OnLockCursor(InputAction.CallbackContext context);
            void OnDistantCamera(InputAction.CallbackContext context);
        }
        public interface ICombatCastingActions
        {
            void OnCastAbility1(InputAction.CallbackContext context);
            void OnCastAbility2(InputAction.CallbackContext context);
            void OnCastAbility3(InputAction.CallbackContext context);
            void OnCastAbility4(InputAction.CallbackContext context);
            void OnCastAbility5(InputAction.CallbackContext context);
            void OnCastAbility6(InputAction.CallbackContext context);
        }
        public interface ICombatTargetingActions
        {
            void OnSellectTarget(InputAction.CallbackContext context);
            void OnControlNext(InputAction.CallbackContext context);
            void OnTargetNext(InputAction.CallbackContext context);
        }
    }
}
